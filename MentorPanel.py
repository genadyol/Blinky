#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.21
#  in conjunction with Tcl version 8.6
#    Mar 13, 2019 10:02:21 PM +0200  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True
import LogicGui
from functools import partial



def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

w = None
def create_MentorPanel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    set_Tk_var()
    top = MentorPanel(w)
    init(w, top, *args, **kwargs)
    return (w, top)

def destroy_MentorPanel():
    global w
    w.destroy()
    w = None

def set_Tk_var():
    global combobox
    combobox = tk.StringVar()

class MentorPanel:
    def create_MentorPanelWin(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Segoe UI} -size 10"
        font11 = "-family {Segoe UI} -size 9"
        font9 = "-family {Segoe UI} -size 12"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1264x869+319+58")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.MentorCntPnl = tk.Frame(top)
        self.MentorCntPnl.place(relx=0.19, rely=0.035, relheight=0.921
                , relwidth=0.633)
        self.MentorCntPnl.configure(relief='groove')
        self.MentorCntPnl.configure(borderwidth="2")
        self.MentorCntPnl.configure(relief='groove')
        self.MentorCntPnl.configure(background="#d9d9d9")
        self.MentorCntPnl.configure(width=125)

        self.MentorLabel = tk.Label(self.MentorCntPnl)
        self.MentorLabel.place(relx=0.331, rely=0.019, height=71, width=297)
        self.MentorLabel.configure(background="#d9d9d9")
        self.MentorLabel.configure(disabledforeground="#a3a3a3")
        self.MentorLabel.configure(font=font9)
        self.MentorLabel.configure(foreground="#000000")
        self.MentorLabel.configure(text='''Mentor Control Panel''')
        self.MentorLabel.configure(width=297)

        self.AddRmvImage = tk.Label(self.MentorCntPnl)
        self.AddRmvImage.place(relx=0.044, rely=0.138, height=34, width=307)
        self.AddRmvImage.configure(background="#d9d9d9")
        self.AddRmvImage.configure(disabledforeground="#a3a3a3")
        self.AddRmvImage.configure(font=font10)
        self.AddRmvImage.configure(foreground="#000000")
        self.AddRmvImage.configure(text='''Add And Remove Images\Phrases:''')
        self.AddRmvImage.configure(width=307)

        self.ChooseUserLabel = tk.Label(self.MentorCntPnl)
        self.ChooseUserLabel.place(relx=0.056, rely=0.2, height=31, width=106)
        self.ChooseUserLabel.configure(background="#d9d9d9")
        self.ChooseUserLabel.configure(disabledforeground="#a3a3a3")
        self.ChooseUserLabel.configure(foreground="#000000")
        self.ChooseUserLabel.configure(text='''Choose User:''')

        self.UserComboBox = ttk.Combobox(self.MentorCntPnl)
        self.UserComboBox.place(relx=0.206, rely=0.2, relheight=0.039
                , relwidth=0.29)

        self.UserComboBox.configure(textvariable=set_Tk_var)
        self.UserComboBox.configure(takefocus="")

        self.ChooseImgLabel = tk.Label(self.MentorCntPnl)
        self.ChooseImgLabel.place(relx=0.519, rely=0.2, height=31, width=127)
        self.ChooseImgLabel.configure(background="#d9d9d9")
        self.ChooseImgLabel.configure(disabledforeground="#a3a3a3")
        self.ChooseImgLabel.configure(foreground="#000000")
        self.ChooseImgLabel.configure(text='''Choose Image:''')
        self.ChooseImgLabel.configure(width=127)

        self.ImageComboBox = ttk.Combobox(self.MentorCntPnl)
        self.ImageComboBox.place(relx=0.688, rely=0.2, relheight=0.039
                , relwidth=0.29)
        self.ImageComboBox.configure(textvariable=set_Tk_var)
        self.ImageComboBox.configure(takefocus="")

        self.RemoveImgToUser = tk.Button(self.MentorCntPnl)
        self.RemoveImgToUser.place(relx=0.063, rely=0.338, height=32, width=188)
        self.RemoveImgToUser.configure(activebackground="#ececec")
        self.RemoveImgToUser.configure(activeforeground="#000000")
        self.RemoveImgToUser.configure(background="#d9d9d9")
        self.RemoveImgToUser.configure(disabledforeground="#a3a3a3")
        self.RemoveImgToUser.configure(foreground="#000000")
        self.RemoveImgToUser.configure(highlightbackground="#d9d9d9")
        self.RemoveImgToUser.configure(highlightcolor="black")
        self.RemoveImgToUser.configure(pady="0")
        self.RemoveImgToUser.configure(text='''Remove Image\Phrase''')
        self.RemoveImgToUser.configure(width=188)

        self.Label5 = tk.Label(self.MentorCntPnl)
        self.Label5.place(relx=0.056, rely=0.269, height=31, width=103)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font=font11)
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Choose Title:''')

        self.TCombobox3 = ttk.Combobox(self.MentorCntPnl)
        self.TCombobox3.place(relx=0.213, rely=0.275, relheight=0.039
                , relwidth=0.29)
        self.TCombobox3.configure(textvariable=set_Tk_var)
        self.TCombobox3.configure(takefocus="")

        self.SendMsgLabel = tk.Label(self.MentorCntPnl)
        self.SendMsgLabel.place(relx=0.05, rely=0.575, height=61, width=207)
        self.SendMsgLabel.configure(background="#d9d9d9")
        self.SendMsgLabel.configure(disabledforeground="#a3a3a3")
        self.SendMsgLabel.configure(foreground="#000000")
        self.SendMsgLabel.configure(text='''Send Message to Users:''')
        self.SendMsgLabel.configure(width=207)

        self.EntryMessageUser = tk.Entry(self.MentorCntPnl)
        self.EntryMessageUser.place(relx=0.35, rely=0.538, height=126
                , relwidth=0.343)
        self.EntryMessageUser.configure(background="white")
        self.EntryMessageUser.configure(disabledforeground="#a3a3a3")
        self.EntryMessageUser.configure(font="TkFixedFont")
        self.EntryMessageUser.configure(foreground="#000000")
        self.EntryMessageUser.configure(insertbackground="black")
        self.EntryMessageUser.configure(width=274)

        self.SendBtn = tk.Button(self.MentorCntPnl)
        self.SendBtn.place(relx=0.738, rely=0.588, height=42, width=118)
        self.SendBtn.configure(activebackground="#ececec")
        self.SendBtn.configure(activeforeground="#000000")
        self.SendBtn.configure(background="#d9d9d9")
        self.SendBtn.configure(disabledforeground="#a3a3a3")
        self.SendBtn.configure(foreground="#000000")
        self.SendBtn.configure(highlightbackground="#d9d9d9")
        self.SendBtn.configure(highlightcolor="black")
        self.SendBtn.configure(pady="0")
        self.SendBtn.configure(text='''Send''')
        self.SendBtn.configure(width=118)

        self.InfoLabel = tk.Label(self.MentorCntPnl)
        self.InfoLabel.place(relx=0.044, rely=0.7, height=71, width=127)
        self.InfoLabel.configure(background="#d9d9d9")
        self.InfoLabel.configure(disabledforeground="#a3a3a3")
        self.InfoLabel.configure(foreground="#000000")
        self.InfoLabel.configure(text='''Information:''')
        self.InfoLabel.configure(width=127)

        self.ChooseUserLabel1 = tk.Label(self.MentorCntPnl)
        self.ChooseUserLabel1.place(relx=0.05, rely=0.788, height=31, width=127)
        self.ChooseUserLabel1.configure(background="#d9d9d9")
        self.ChooseUserLabel1.configure(disabledforeground="#a3a3a3")
        self.ChooseUserLabel1.configure(foreground="#000000")
        self.ChooseUserLabel1.configure(text='''Choose User:''')
        self.ChooseUserLabel1.configure(width=127)

        self.ChooseUserComboBox1 = ttk.Combobox(self.MentorCntPnl)
        self.ChooseUserComboBox1.place(relx=0.213, rely=0.788, relheight=0.039
                , relwidth=0.29)
        self.ChooseUserComboBox1.configure(textvariable=set_Tk_var)
        self.ChooseUserComboBox1.configure(takefocus="")

        self.InfoBtn = tk.Button(self.MentorCntPnl)
        self.InfoBtn.place(relx=0.55, rely=0.788, height=42, width=108)
        self.InfoBtn.configure(activebackground="#ececec")
        self.InfoBtn.configure(activeforeground="#000000")
        self.InfoBtn.configure(background="#d9d9d9")
        self.InfoBtn.configure(disabledforeground="#a3a3a3")
        self.InfoBtn.configure(foreground="#000000")
        self.InfoBtn.configure(highlightbackground="#d9d9d9")
        self.InfoBtn.configure(highlightcolor="black")
        self.InfoBtn.configure(pady="0")
        self.InfoBtn.configure(text='''User Info''')
        self.InfoBtn.configure(width=108)

        self.MedicalBtn = tk.Button(self.MentorCntPnl)
        self.MedicalBtn.place(relx=0.763, rely=0.788, height=42, width=118)
        self.MedicalBtn.configure(activebackground="#ececec")
        self.MedicalBtn.configure(activeforeground="#000000")
        self.MedicalBtn.configure(background="#d9d9d9")
        self.MedicalBtn.configure(disabledforeground="#a3a3a3")
        self.MedicalBtn.configure(foreground="#000000")
        self.MedicalBtn.configure(highlightbackground="#d9d9d9")
        self.MedicalBtn.configure(highlightcolor="black")
        self.MedicalBtn.configure(pady="0")
        self.MedicalBtn.configure(text='''Medical Info''')
        self.MedicalBtn.configure(width=118)

        self.PswResetEntry = tk.Entry(self.MentorCntPnl)
        self.PswResetEntry.place(relx=0.238, rely=0.863, height=26
                , relwidth=0.28)
        self.PswResetEntry.configure(background="white")
        self.PswResetEntry.configure(disabledforeground="#a3a3a3")
        self.PswResetEntry.configure(font="TkFixedFont")
        self.PswResetEntry.configure(foreground="#000000")
        self.PswResetEntry.configure(insertbackground="black")
        self.PswResetEntry.configure(width=224)

        self.PswResetLabel = tk.Label(self.MentorCntPnl)
        self.PswResetLabel.place(relx=0.063, rely=0.856, height=31, width=134)
        self.PswResetLabel.configure(background="#d9d9d9")
        self.PswResetLabel.configure(disabledforeground="#a3a3a3")
        self.PswResetLabel.configure(foreground="#000000")
        self.PswResetLabel.configure(text='''Password Reset:''')

        self.PswResetButton = tk.Button(self.MentorCntPnl)
        self.PswResetButton.place(relx=0.563, rely=0.856, height=32, width=98)
        self.PswResetButton.configure(activebackground="#ececec")
        self.PswResetButton.configure(activeforeground="#000000")
        self.PswResetButton.configure(background="#d9d9d9")
        self.PswResetButton.configure(disabledforeground="#a3a3a3")
        self.PswResetButton.configure(foreground="#000000")
        self.PswResetButton.configure(highlightbackground="#d9d9d9")
        self.PswResetButton.configure(highlightcolor="black")
        self.PswResetButton.configure(pady="0")
        self.PswResetButton.configure(text='''Reset''')
        self.PswResetButton.configure(width=98)

        action_with_args = partial(LogicGui.LogicGui.LogoutfromMentor, self, top)

        self.LogOutMenBtn = tk.Button(self.MentorCntPnl,command=action_with_args)
        self.LogOutMenBtn.place(relx=0.844, rely=0.019, height=52, width=98)
        self.LogOutMenBtn.configure(activebackground="#ececec")
        self.LogOutMenBtn.configure(activeforeground="#000000")
        self.LogOutMenBtn.configure(background="#d9d9d9")
        self.LogOutMenBtn.configure(disabledforeground="#a3a3a3")
        self.LogOutMenBtn.configure(foreground="#000000")
        self.LogOutMenBtn.configure(highlightbackground="#d9d9d9")
        self.LogOutMenBtn.configure(highlightcolor="black")
        self.LogOutMenBtn.configure(pady="0")
        self.LogOutMenBtn.configure(text='''Log Out''')
        self.LogOutMenBtn.configure(width=98)

        self.TechLabel = tk.Label(self.MentorCntPnl)
        self.TechLabel.place(relx=0.063, rely=0.925, height=31, width=75)
        self.TechLabel.configure(background="#d9d9d9")
        self.TechLabel.configure(disabledforeground="#a3a3a3")
        self.TechLabel.configure(foreground="#000000")
        self.TechLabel.configure(text='''Support:''')

        self.getSuppoertBtn = tk.Button(self.MentorCntPnl)
        self.getSuppoertBtn.place(relx=0.213, rely=0.925, height=32, width=118)
        self.getSuppoertBtn.configure(activebackground="#ececec")
        self.getSuppoertBtn.configure(activeforeground="#000000")
        self.getSuppoertBtn.configure(background="#d9d9d9")
        self.getSuppoertBtn.configure(disabledforeground="#a3a3a3")
        self.getSuppoertBtn.configure(foreground="#000000")
        self.getSuppoertBtn.configure(highlightbackground="#d9d9d9")
        self.getSuppoertBtn.configure(highlightcolor="black")
        self.getSuppoertBtn.configure(pady="0")
        self.getSuppoertBtn.configure(text='''Get Support''')
        self.getSuppoertBtn.configure(width=118)

        self.SendMsgLabel2 = tk.Label(self.MentorCntPnl)
        self.SendMsgLabel2.place(relx=0.013, rely=0.438, height=61, width=207)
        self.SendMsgLabel2.configure(activebackground="#f9f9f9")
        self.SendMsgLabel2.configure(activeforeground="black")
        self.SendMsgLabel2.configure(background="#d9d9d9")
        self.SendMsgLabel2.configure(disabledforeground="#a3a3a3")
        self.SendMsgLabel2.configure(foreground="#000000")
        self.SendMsgLabel2.configure(highlightbackground="#d9d9d9")
        self.SendMsgLabel2.configure(highlightcolor="black")
        self.SendMsgLabel2.configure(text='''Send feedback:''')


        self.sendfeedback = tk.Button(self.MentorCntPnl)
        self.sendfeedback.place(relx=0.338, rely=0.438, height=32, width=118)
        self.sendfeedback.configure(activebackground="#ececec")
        self.sendfeedback.configure(activeforeground="#000000")
        self.sendfeedback.configure(background="#d9d9d9")
        self.sendfeedback.configure(disabledforeground="#a3a3a3")
        self.sendfeedback.configure(foreground="#000000")
        self.sendfeedback.configure(highlightbackground="#d9d9d9")
        self.sendfeedback.configure(highlightcolor="black")
        self.sendfeedback.configure(pady="0")
        self.sendfeedback.configure(text='''Send''')
        self.sendfeedback.configure(width=118)

        self.AddImgToUser_2 = tk.Button(self.MentorCntPnl)
        self.AddImgToUser_2.place(relx=0.338, rely=0.338, height=32, width=188)
        self.AddImgToUser_2.configure(activebackground="#ececec")
        self.AddImgToUser_2.configure(activeforeground="#000000")
        self.AddImgToUser_2.configure(background="#d9d9d9")
        self.AddImgToUser_2.configure(disabledforeground="#a3a3a3")
        self.AddImgToUser_2.configure(foreground="#000000")
        self.AddImgToUser_2.configure(highlightbackground="#d9d9d9")
        self.AddImgToUser_2.configure(highlightcolor="black")
        self.AddImgToUser_2.configure(pady="0")
        self.AddImgToUser_2.configure(text='''Add Image\Phrase''')







